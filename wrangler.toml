name = "content-store-service"
main = "src/index.js"
compatibility_date = "2024-08-21"

# Environment variables for all environments - ALIGNED WITH SHARED CONFIG
[vars]
NODE_ENV = "development"
SERVICE_NAME = "content-store-service"
LOG_LEVEL = "info"
AUTH_SERVICE_URL = "http://localhost:3003"
DATA_SERVICE_URL = "http://localhost:3002"
CONTENT_STORE_SERVICE_URL = "http://localhost:3001"
AUTH_JWT_SECRET = "d49f3be21dc5ebb3e95e4dfee78f524f8899313ccde1ce362c5df2d33429ad61"
CORS_ORIGINS = "http://localhost:3000,http://localhost:3001,http://localhost:3002"
MAX_FILE_SIZE = "26214400"  # 25MB in bytes
ALLOWED_FILE_TYPES = "image/jpeg,image/png,image/webp,image/gif,application/pdf,video/mp4,video/webm,audio/mpeg,audio/wav"

# Development environment
[env.development]
vars = { 
  NODE_ENV = "development",
  SERVICE_NAME = "content-store-service",
  LOG_LEVEL = "info"
}

# Staging environment  
[env.staging]
name = "content-store-staging"

# Service bindings for staging
[[env.staging.services]]
binding = "DATA_SERVICE"
service = "data-service"
environment = "staging"

[env.staging.vars]
NODE_ENV = "staging"
SERVICE_NAME = "content-store-service"
LOG_LEVEL = "info"
AUTH_SERVICE_URL = "https://auth-staging.tamyla.com"
DATA_SERVICE_URL = "https://data-service-staging.tamylatrading.workers.dev"
CONTENT_STORE_SERVICE_URL = "https://content-staging.tamyla.com"
CORS_ORIGINS = "https://*.tamyla.com,http://localhost:3000,http://localhost:3001"
MAX_FILE_SIZE = "26214400"
ALLOWED_FILE_TYPES = "image/jpeg,image/png,image/webp,image/gif,application/pdf,video/mp4,video/webm,audio/mpeg,audio/wav"

[[env.staging.r2_buckets]]
binding = "CONTENT_BUCKET"
bucket_name = "tamyla-content-store-staging"
preview_bucket_name = "tamyla-content-store-staging"
[[env.staging.r2_buckets]]
binding = "CONTENT_BUCKET_PROD"
bucket_name = "tamyla-content-store"
preview_bucket_name = "tamyla-content-store"

[[env.staging.analytics_engine_datasets]]
binding = "CONTENT_ANALYTICS"
dataset = "CONTENT_ANALYTICS"

# Production environment
[env.production]
name = "content-store-service"

# Service bindings for production
[[env.production.services]]
binding = "DATA_SERVICE"
service = "data-service"
environment = "production"

[env.production.vars]
NODE_ENV = "production"
SERVICE_NAME = "content-store-service"
LOG_LEVEL = "info"
AUTH_SERVICE_URL = "https://auth.tamyla.com"
DATA_SERVICE_URL = "https://data-service.tamylatrading.workers.dev"
CONTENT_STORE_SERVICE_URL = "https://content.tamyla.com"
CORS_ORIGINS = "https://tamyla.com,https://www.tamyla.com,https://trading.tamyla.com"
MAX_FILE_SIZE = "26214400"
ALLOWED_FILE_TYPES = "image/jpeg,image/png,image/webp,image/gif,application/pdf,video/mp4,video/webm,audio/mpeg,audio/wav"

[[env.production.r2_buckets]]
binding = "CONTENT_BUCKET"
bucket_name = "tamyla-content-store"
preview_bucket_name = "tamyla-content-store"
[[env.production.r2_buckets]]
binding = "CONTENT_BUCKET_STAGING"
bucket_name = "tamyla-content-store-staging"
preview_bucket_name = "tamyla-content-store-staging"

[[env.production.analytics_engine_datasets]]
binding = "CONTENT_ANALYTICS"
dataset = "CONTENT_ANALYTICS"

# R2 bucket binding (using existing bucket)
[[r2_buckets]]
binding = "CONTENT_BUCKET"
bucket_name = "tamyla-content-store"
preview_bucket_name = "tamyla-content-store"

# D1 database binding for metadata (commented out until configured)
# [[d1_databases]]
# binding = "CONTENT_DB"
# database_name = "content-store-metadata"
# database_id = "placeholder-database-id"
# preview_database_id = "placeholder-preview-database-id"

# KV binding for caching (commented out until configured)
# [[kv_namespaces]]
# binding = "CONTENT_CACHE"
# id = "placeholder-kv-id"
# preview_id = "placeholder-preview-kv-id"

# Analytics binding
[[analytics_engine_datasets]]
binding = "CONTENT_ANALYTICS"
dataset = "CONTENT_ANALYTICS"

# Compatibility flags

# Compatibility flags
compatibility_flags = ["nodejs_compat"]

# Custom domain configuration (handled via DNS CNAME)
# [[routes]]
# pattern = "content.tamyla.com"
# custom_domain = true
